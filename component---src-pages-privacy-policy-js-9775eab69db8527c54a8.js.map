{"version":3,"sources":["webpack:///./src/pages/privacy-policy.js","webpack:///./src/hooks/useWindowSize.js"],"names":["PrivacyPolicyPage","dimensions","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","title","Paper","name","frameBorder","src"],"mappings":"4JAyBeA,UApBf,WACE,IAAMC,ECHO,WACb,IAAMC,EAA6B,iBAAXC,OAExB,SAASC,IACP,MAAO,CACLC,MAAOH,EAAWC,OAAOG,gBAAaC,EACtCC,OAAQN,EAAWC,OAAOM,iBAAcF,GANN,MAUFG,mBAASN,GAAtCO,EAV+B,KAUnBC,EAVmB,KAyBtC,OAbAC,qBAAU,WACR,IAAKX,EACH,OAAO,EAGT,SAASY,IACPF,EAAcR,KAIhB,OADAD,OAAOY,iBAAiB,SAAUD,GAC3B,kBAAMX,OAAOa,oBAAoB,SAAUF,MACjD,IAEIH,EDtBYM,GAEnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,mBACX,YAACC,EAAA,EAAD,KACE,sBACED,MAAM,eACNE,KAAK,eACLf,MAAM,OACNG,OAAQP,EAAWO,OAAS,IAC5Ba,YAAY,IACZC,IAAI","file":"component---src-pages-privacy-policy-js-9775eab69db8527c54a8.js","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Layout, SEO } from 'components';\nimport useWindowSize from '../hooks/useWindowSize';\n\nfunction PrivacyPolicyPage() {\n  const dimensions = useWindowSize();\n\n  return (\n    <Layout>\n      <SEO title=\"Privacy Policy\" />\n      <Paper>\n        <iframe\n          title=\"contact-form\"\n          name=\"contact-form\"\n          width=\"100%\"\n          height={dimensions.height - 120}\n          frameBorder=\"0\"\n          src=\"https://docs.google.com/document/d/e/2PACX-1vQu8qEO-akZuQfWfi0475QF3oOlzP_Hjuonsl3PQ03UI_Ki5M8zXSqUCoL0ZXhH0Gp6uwdEfMu1Rp6a/pub?embedded=true\"\n        />\n      </Paper>\n    </Layout>\n  );\n}\n\nexport default PrivacyPolicyPage;\n","import { useEffect, useState } from 'react';\n\n// Hook\nexport default function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n"],"sourceRoot":""}